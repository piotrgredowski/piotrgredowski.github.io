<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gredowski.com/</id><title>Piotr Grędowski - personal website</title><subtitle>Just random stuff related to programming and not only</subtitle> <updated>2025-10-27T10:26:01+01:00</updated> <author> <name>piotrgredowski</name> <uri>https://gredowski.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://gredowski.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://gredowski.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2025 piotrgredowski </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Activating Python virtual environment in PowerShell</title><link href="https://gredowski.com/blogging/2024/03/28/activate-function-in-powershell.html" rel="alternate" type="text/html" title="Activating Python virtual environment in PowerShell" /><published>2024-03-28T07:26:08+01:00</published> <updated>2024-03-28T07:26:08+01:00</updated> <id>https://gredowski.com/blogging/2024/03/28/activate-function-in-powershell.html</id> <content src="https://gredowski.com/blogging/2024/03/28/activate-function-in-powershell.html" /> <author> <name>piotrgredowski</name> </author> <category term="Blogging" /> <summary> When I’m working on Windows in the repository where I build executables, I’m usually using two types of virtual environments for my Python development. One is called .venvdev and it’s located in the root of my project. It’s used for development purposes. Another is called .venv, it’s located in the same directory as .venvdev and it’s used for production purposes. Whenever I need to build for e... </summary> </entry> <entry><title>Linting whole project in VSCode with flake8</title><link href="https://gredowski.com/blogging/2021/02/21/linting-whole-project-in-vscode.html" rel="alternate" type="text/html" title="Linting whole project in VSCode with flake8" /><published>2021-02-21T19:56:59+01:00</published> <updated>2022-05-21T09:01:36+02:00</updated> <id>https://gredowski.com/blogging/2021/02/21/linting-whole-project-in-vscode.html</id> <content src="https://gredowski.com/blogging/2021/02/21/linting-whole-project-in-vscode.html" /> <author> <name>piotrgredowski</name> </author> <category term="Blogging" /> <summary> Intro When your pipeline fails because your linter reported some problems in your code - you have to go to file on your computer, find problem and fix it. Or you can run your linter locally, click on file name - go to faulty line and fix it. You won’t have such problem if you have configured precommit hook which runs all your scripts for code analysis before commit is created. But that’s ... </summary> </entry> <entry><title>SonarCloud integration with VSCode</title><link href="https://gredowski.com/blogging/2021/02/21/sonarlint-in-vscode-with-sonarcloud.html" rel="alternate" type="text/html" title="SonarCloud integration with VSCode" /><published>2021-02-21T17:26:08+01:00</published> <updated>2021-08-01T12:33:33+02:00</updated> <id>https://gredowski.com/blogging/2021/02/21/sonarlint-in-vscode-with-sonarcloud.html</id> <content src="https://gredowski.com/blogging/2021/02/21/sonarlint-in-vscode-with-sonarcloud.html" /> <author> <name>piotrgredowski</name> </author> <category term="Blogging" /> <summary> Intro We are using in our company SonarCloud to perform static analysis on our projects. Sonar analysis is part of our CI pipeline and it gives great tips on how to improve quality of our code - no doubts. But my goal was to not have to wait for analysis done and to go to SonarCloud website which will show me results of Sonar analysis. I just wanted to see all of the problems in my code edit... </summary> </entry> </feed>
